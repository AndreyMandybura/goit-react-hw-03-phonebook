{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["ContactForm","state","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","console","log","props","onSubmit","this","className","s","form","label","type","pattern","title","required","onChange","inputName","inputNumber","button","Component","ContactList","contacts","onDeleteContact","list","map","contact","listItem","onClick","id","Filter","header","filterInput","App","filter","addContact","Contact","nanoid","some","toLowerCase","alert","deleteContact","contactId","handleChangeFilter","handleContactFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevState","setItem","stringify","statefilter","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1613fe97.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n\r\n    state = {\r\n        name: \"\",\r\n        number: \"\",\r\n  };\r\n    \r\n  handleChange = e => {\r\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value});\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n    \r\n    render() {\r\n        return (\r\n        <form onSubmit={this.handleSubmit} className={s.form}>\r\n          <label className={s.label}> Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              className={s.inputName}\r\n            />\r\n          </label>\r\n          <label className={s.label}>Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              required\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              className={s.inputNumber}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={s.button}>Add contact</button>\r\n        </form>\r\n\r\n        );\r\n    }\r\n\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nfunction ContactList({contacts, onDeleteContact}) {\r\n    return (\r\n        <div>\r\n      <ul className={s.list}>\r\n        {contacts.map((contact) => (\r\n          <li key={contact.id} className={s.listItem}>\r\n            {contact.name}: {contact.number}\r\n            <button\r\n              onClick={() => onDeleteContact(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter({value, onChange}) {\r\n    return (\r\n    <div>\r\n        <h4 className={s.header}>Find contacts by name</h4>\r\n        <input type=\"text\" name=\"filter\" value={value} onChange={onChange} className={s.filterInput}/>\r\n    </div>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default Filter;","import { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: \"\",\n  };\n\n  addContact = ({name, number}) => {\n    const Contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    if (\n      this.state.contacts.some(contact => contact.name.toLowerCase() === Contact.name.toLowerCase()) ||\n      this.state.contacts.some(contact => contact.number === Contact.number)\n    ) {\n      alert(`${Contact.name} is already in contacts!`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [Contact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  handleChangeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  handleContactFilter = () => {\n    return this.state.contacts.filter(contact => contact.name.toLowerCase().includes(this.state.filter.toLowerCase()));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts)\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact}/>\n        <h2>Contacts</h2>\n        <Filter onChange={this.handleChangeFilter} value={this.statefilter} />\n        <ContactList contacts={this.handleContactFilter()} onDeleteContact={this.deleteContact} />\n      </div>\n      );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3nWv0\",\"button\":\"ContactForm_button__3sQMM\",\"label\":\"ContactForm_label__2768P\",\"inputName\":\"ContactForm_inputName__2NUxA\",\"inputNumber\":\"ContactForm_inputNumber__hMyN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1Utow\",\"listItem\":\"ContactList_listItem__1oMrV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__1uLSm\",\"header\":\"Filter_header__1bB37\"};"],"sourceRoot":""}